<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">5</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">100</stringProp>
        <stringProp name="ThreadGroup.ramp_time">5</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:&quot;1b9308e6-fe13-4483-9dc2-fe40d2b7b526&quot;,&quot;date&quot;:&quot;2021-02-26T06:00:00.000Z&quot;,&quot;foremanId&quot;:6,&quot;dailyJobHazardAnalysis&quot;:{&quot;date&quot;:&quot;2021-02-26T20:09:45.609Z&quot;,&quot;isSigned&quot;:true,&quot;data&quot;:&quot;{\&quot;date\&quot;:\&quot;2021-02-26T20:09:45.608Z\&quot;,\&quot;jobs\&quot;:[{\&quot;address\&quot;:\&quot;Rod Test\&quot;,\&quot;jobId\&quot;:\&quot;FTW-00033\&quot;}],\&quot;supervisor\&quot;:\&quot;Supervisor Dev\&quot;,\&quot;foreman\&quot;:\&quot;Foreman Dev\&quot;,\&quot;crew\&quot;:[{\&quot;id\&quot;:6,\&quot;employeeId\&quot;:\&quot;904-19\&quot;,\&quot;isForeman\&quot;:true,\&quot;name\&quot;:\&quot;Foreman Dev\&quot;,\&quot;signed\&quot;:true},{\&quot;id\&quot;:48,\&quot;employeeId\&quot;:\&quot;112-11\&quot;,\&quot;isForeman\&quot;:false,\&quot;name\&quot;:\&quot;KingStannis OFTheHouse BaratheonTheRealKing\&quot;,\&quot;signed\&quot;:true},{\&quot;id\&quot;:20,\&quot;employeeId\&quot;:\&quot;1918-19\&quot;,\&quot;isForeman\&quot;:false,\&quot;name\&quot;:\&quot;Carlos Bautista\&quot;,\&quot;signed\&quot;:true},{\&quot;id\&quot;:22,\&quot;employeeId\&quot;:\&quot;1890-19\&quot;,\&quot;isForeman\&quot;:false,\&quot;name\&quot;:\&quot;Sergio Berton\&quot;,\&quot;signed\&quot;:true}],\&quot;checklist\&quot;:[{\&quot;description\&quot;:\&quot;1. Emergency procedures discussed? Work location, location and number of emergency facilities?\&quot;,\&quot;checked\&quot;:true},{\&quot;description\&quot;:\&quot;2. All employees aware of hazards involved with work? Cross bores have been identified as a hazard?\&quot;,\&quot;checked\&quot;:true},{\&quot;description\&quot;:\&quot;3. All employees are aware of methods to be used to eliminate, or protect them from the hazards?\&quot;,\&quot;checked\&quot;:true},{\&quot;description\&quot;:\&quot;4. All employees are aware of and understand their job duties?\&quot;,\&quot;checked\&quot;:true},{\&quot;description\&quot;:\&quot;5. Are the locates good?\&quot;,\&quot;checked\&quot;:true},{\&quot;description\&quot;:\&quot;6. Is shoring needed and at the site?\&quot;,\&quot;checked\&quot;:true},{\&quot;description\&quot;:\&quot;7. Are ladders and ramps needed and on site?\&quot;,\&quot;checked\&quot;:true}],\&quot;equipment\&quot;:[{\&quot;description\&quot;:\&quot;Hard Hats\&quot;,\&quot;checked\&quot;:false},{\&quot;description\&quot;:\&quot;Hearing Protection\&quot;,\&quot;checked\&quot;:false},{\&quot;description\&quot;:\&quot;Rubber Sleeves\&quot;,\&quot;checked\&quot;:false},{\&quot;description\&quot;:\&quot;Safety Glasses\&quot;,\&quot;checked\&quot;:false},{\&quot;description\&quot;:\&quot;Hot Gloves\&quot;,\&quot;checked\&quot;:false},{\&quot;description\&quot;:\&quot;Respiratory Protection\&quot;,\&quot;checked\&quot;:false},{\&quot;description\&quot;:\&quot;Vests\&quot;,\&quot;checked\&quot;:false},{\&quot;description\&quot;:\&quot;Traffic Control Devices\&quot;,\&quot;checked\&quot;:false}]}&quot;},&quot;dwoJobs&quot;:[{&quot;id&quot;:&quot;baf29cce-1703-4658-bfa4-63a385f6204c&quot;,&quot;jobId&quot;:48,&quot;jobStatus&quot;:&quot;completed&quot;,&quot;startLocation&quot;:&quot;32.885, -96.966&quot;,&quot;crewId&quot;:65,&quot;crewEmployees&quot;:[{&quot;id&quot;:6,&quot;isDriver&quot;:false},{&quot;id&quot;:20,&quot;isDriver&quot;:false},{&quot;id&quot;:22,&quot;isDriver&quot;:false},{&quot;id&quot;:48,&quot;isDriver&quot;:false}],&quot;workShifts&quot;:[{&quot;actionStatus&quot;:&quot;endJob&quot;,&quot;id&quot;:&quot;72237aa6-7772-4243-9bc9-ac438bff6548&quot;,&quot;date&quot;:&quot;2021-02-26T06:00:00.000Z&quot;,&quot;employeeId&quot;:6,&quot;type&quot;:&quot;normal&quot;,&quot;status&quot;:&quot;finished&quot;,&quot;isDriver&quot;:false,&quot;start&quot;:&quot;2021-02-26T19:44:10.735Z&quot;,&quot;startLocation&quot;:&quot;32.885, -96.966&quot;,&quot;startPictureId&quot;:&quot;&quot;,&quot;timeBreaks&quot;:[],&quot;notes&quot;:[],&quot;ongoingIndividualAction&quot;:false,&quot;hasClockedOut&quot;:false,&quot;firstName&quot;:&quot;Foreman&quot;,&quot;lastName&quot;:&quot;Dev&quot;,&quot;endLocation&quot;:&quot;32.885, -96.966&quot;,&quot;endPictureId&quot;:&quot;1304&quot;,&quot;end&quot;:&quot;2021-02-26T20:04:34.405Z&quot;},{&quot;actionStatus&quot;:&quot;endJob&quot;,&quot;id&quot;:&quot;4ed76a1e-31a6-4c93-b94a-a2ef812e0901&quot;,&quot;date&quot;:&quot;2021-02-26T06:00:00.000Z&quot;,&quot;employeeId&quot;:20,&quot;type&quot;:&quot;normal&quot;,&quot;status&quot;:&quot;finished&quot;,&quot;isDriver&quot;:false,&quot;start&quot;:&quot;2021-02-26T19:44:10.735Z&quot;,&quot;startLocation&quot;:&quot;32.885, -96.966&quot;,&quot;startPictureId&quot;:&quot;&quot;,&quot;timeBreaks&quot;:[],&quot;notes&quot;:[],&quot;ongoingIndividualAction&quot;:false,&quot;hasClockedOut&quot;:false,&quot;firstName&quot;:&quot;Carlos&quot;,&quot;lastName&quot;:&quot;Bautista&quot;,&quot;endLocation&quot;:&quot;32.885, -96.966&quot;,&quot;endPictureId&quot;:&quot;1301&quot;,&quot;end&quot;:&quot;2021-02-26T20:04:34.405Z&quot;},{&quot;actionStatus&quot;:&quot;endJob&quot;,&quot;id&quot;:&quot;a9789e14-86f1-451f-bcc2-0a3ebc7c4c7a&quot;,&quot;date&quot;:&quot;2021-02-26T06:00:00.000Z&quot;,&quot;employeeId&quot;:22,&quot;type&quot;:&quot;normal&quot;,&quot;status&quot;:&quot;finished&quot;,&quot;isDriver&quot;:false,&quot;start&quot;:&quot;2021-02-26T19:44:10.735Z&quot;,&quot;startLocation&quot;:&quot;32.885, -96.966&quot;,&quot;startPictureId&quot;:&quot;&quot;,&quot;timeBreaks&quot;:[],&quot;notes&quot;:[],&quot;ongoingIndividualAction&quot;:false,&quot;hasClockedOut&quot;:false,&quot;firstName&quot;:&quot;Sergio&quot;,&quot;lastName&quot;:&quot;Berton&quot;,&quot;endLocation&quot;:&quot;32.885, -96.966&quot;,&quot;endPictureId&quot;:&quot;1302&quot;,&quot;end&quot;:&quot;2021-02-26T20:04:34.405Z&quot;},{&quot;actionStatus&quot;:&quot;endJob&quot;,&quot;id&quot;:&quot;770c7cb5-cd9c-4026-8ff5-9a52abed24b1&quot;,&quot;date&quot;:&quot;2021-02-26T06:00:00.000Z&quot;,&quot;employeeId&quot;:48,&quot;type&quot;:&quot;normal&quot;,&quot;status&quot;:&quot;finished&quot;,&quot;isDriver&quot;:false,&quot;start&quot;:&quot;2021-02-26T19:44:10.735Z&quot;,&quot;startLocation&quot;:&quot;32.885, -96.966&quot;,&quot;startPictureId&quot;:&quot;&quot;,&quot;timeBreaks&quot;:[],&quot;notes&quot;:[],&quot;ongoingIndividualAction&quot;:false,&quot;hasClockedOut&quot;:false,&quot;firstName&quot;:&quot;KingStannis&quot;,&quot;lastName&quot;:&quot;BaratheonTheRealKing&quot;,&quot;endLocation&quot;:&quot;32.885, -96.966&quot;,&quot;endPictureId&quot;:&quot;1303&quot;,&quot;end&quot;:&quot;2021-02-26T20:04:34.405Z&quot;}],&quot;jobNotes&quot;:[],&quot;endLocation&quot;:&quot;32.885, -96.966&quot;},{&quot;id&quot;:&quot;47379ed8-f537-4fd2-b78c-5a654c3466f7&quot;,&quot;jobId&quot;:52,&quot;jobStatus&quot;:&quot;inProgress&quot;,&quot;startLocation&quot;:&quot;32.885, -96.966&quot;,&quot;crewId&quot;:65,&quot;crewEmployees&quot;:[{&quot;id&quot;:6,&quot;isDriver&quot;:false},{&quot;id&quot;:48,&quot;isDriver&quot;:false},{&quot;id&quot;:20,&quot;isDriver&quot;:false},{&quot;id&quot;:22,&quot;isDriver&quot;:false}],&quot;workShifts&quot;:[{&quot;actionStatus&quot;:&quot;doneForToday&quot;,&quot;id&quot;:&quot;9f10ef88-8fdd-4f9e-806d-b7fb1f060948&quot;,&quot;date&quot;:&quot;2021-02-26T06:00:00.000Z&quot;,&quot;employeeId&quot;:6,&quot;type&quot;:&quot;normal&quot;,&quot;status&quot;:&quot;finished&quot;,&quot;isDriver&quot;:false,&quot;start&quot;:&quot;2021-02-26T20:09:17.137Z&quot;,&quot;startLocation&quot;:&quot;32.885, -96.966&quot;,&quot;startPictureId&quot;:&quot;1314&quot;,&quot;timeBreaks&quot;:[],&quot;notes&quot;:[],&quot;ongoingIndividualAction&quot;:false,&quot;hasClockedOut&quot;:false,&quot;firstName&quot;:&quot;Foreman&quot;,&quot;lastName&quot;:&quot;Dev&quot;,&quot;endLocation&quot;:&quot;32.885, -96.966&quot;,&quot;endPictureId&quot;:&quot;1319&quot;,&quot;end&quot;:&quot;2021-02-26T20:09:45.467Z&quot;},{&quot;actionStatus&quot;:&quot;doneForToday&quot;,&quot;id&quot;:&quot;d39b8ef0-0087-4b30-b4d8-da34d46d9dd6&quot;,&quot;date&quot;:&quot;2021-02-26T06:00:00.000Z&quot;,&quot;employeeId&quot;:48,&quot;type&quot;:&quot;normal&quot;,&quot;status&quot;:&quot;finished&quot;,&quot;isDriver&quot;:false,&quot;start&quot;:&quot;2021-02-26T20:09:17.137Z&quot;,&quot;startLocation&quot;:&quot;32.885, -96.966&quot;,&quot;startPictureId&quot;:&quot;1313&quot;,&quot;timeBreaks&quot;:[],&quot;notes&quot;:[],&quot;ongoingIndividualAction&quot;:false,&quot;hasClockedOut&quot;:false,&quot;firstName&quot;:&quot;KingStannis&quot;,&quot;lastName&quot;:&quot;BaratheonTheRealKing&quot;,&quot;endLocation&quot;:&quot;32.885, -96.966&quot;,&quot;endPictureId&quot;:&quot;1317&quot;,&quot;end&quot;:&quot;2021-02-26T20:09:45.467Z&quot;},{&quot;actionStatus&quot;:&quot;doneForToday&quot;,&quot;id&quot;:&quot;19fd001f-8629-48c7-aed2-e58b07db72d2&quot;,&quot;date&quot;:&quot;2021-02-26T06:00:00.000Z&quot;,&quot;employeeId&quot;:20,&quot;type&quot;:&quot;normal&quot;,&quot;status&quot;:&quot;finished&quot;,&quot;isDriver&quot;:false,&quot;start&quot;:&quot;2021-02-26T20:09:17.137Z&quot;,&quot;startLocation&quot;:&quot;32.885, -96.966&quot;,&quot;startPictureId&quot;:&quot;1315&quot;,&quot;timeBreaks&quot;:[],&quot;notes&quot;:[],&quot;ongoingIndividualAction&quot;:false,&quot;hasClockedOut&quot;:false,&quot;firstName&quot;:&quot;Carlos&quot;,&quot;lastName&quot;:&quot;Bautista&quot;,&quot;endLocation&quot;:&quot;32.885, -96.966&quot;,&quot;endPictureId&quot;:&quot;1320&quot;,&quot;end&quot;:&quot;2021-02-26T20:09:45.467Z&quot;},{&quot;actionStatus&quot;:&quot;doneForToday&quot;,&quot;id&quot;:&quot;b824dcf6-027b-43e5-ac9a-f938943bce75&quot;,&quot;date&quot;:&quot;2021-02-26T06:00:00.000Z&quot;,&quot;employeeId&quot;:22,&quot;type&quot;:&quot;normal&quot;,&quot;status&quot;:&quot;finished&quot;,&quot;isDriver&quot;:false,&quot;start&quot;:&quot;2021-02-26T20:09:17.137Z&quot;,&quot;startLocation&quot;:&quot;32.885, -96.966&quot;,&quot;startPictureId&quot;:&quot;1316&quot;,&quot;timeBreaks&quot;:[],&quot;notes&quot;:[],&quot;ongoingIndividualAction&quot;:false,&quot;hasClockedOut&quot;:false,&quot;firstName&quot;:&quot;Sergio&quot;,&quot;lastName&quot;:&quot;Berton&quot;,&quot;endLocation&quot;:&quot;32.885, -96.966&quot;,&quot;endPictureId&quot;:&quot;1318&quot;,&quot;end&quot;:&quot;2021-02-26T20:09:45.467Z&quot;}],&quot;jobNotes&quot;:[],&quot;endLocation&quot;:&quot;32.885, -96.966&quot;}],&quot;status&quot;:&quot;submitted&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.dwodev.tsu1.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/dwo/save</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Niwic3ViIjoiYWNjZXNzIiwiYXVkIjoidXNlciIsImV4cCI6MTYxOTY1MTA4ODgwMSwiaWF0IjoxNjE0NTUzNDg4ODAxLCJqdGkiOiJiNTgzZTNjYS04MGRlLTQ0NjctOWE4OS03MTYxYTBkNGNlZTciLCJlbWFpbCI6ImZvcmVtYW5kZXZ0c3VAZ21haWwuY29tIiwicm9sZSI6ImZvcmVtYW4ifQ.lzSgZemAA95QZeL2V0t7Ki2RFLuYReLF6gKUS20bcXw</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.dwodev.tsu1.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/job_expense?where=%7B%22jobId%22:55%7D&amp;order=[[%22updatedAt%22,%22DESC%22]/]</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Niwic3ViIjoiYWNjZXNzIiwiYXVkIjoidXNlciIsImV4cCI6MTYxOTY1MTA4ODgwMSwiaWF0IjoxNjE0NTUzNDg4ODAxLCJqdGkiOiJiNTgzZTNjYS04MGRlLTQ0NjctOWE4OS03MTYxYTBkNGNlZTciLCJlbWFpbCI6ImZvcmVtYW5kZXZ0c3VAZ21haWwuY29tIiwicm9sZSI6ImZvcmVtYW4ifQ.lzSgZemAA95QZeL2V0t7Ki2RFLuYReLF6gKUS20bcXw</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
